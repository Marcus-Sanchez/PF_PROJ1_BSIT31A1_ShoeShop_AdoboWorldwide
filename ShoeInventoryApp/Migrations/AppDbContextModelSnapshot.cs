// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoeInventoryApp.Models;

#nullable disable

namespace ShoeInventoryApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("ShoeInventoryApp.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("ShoeInventoryApp.Models.Shoe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Shoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Nike",
                            Name = "AirMax",
                            Price = 4500.0
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Adidas",
                            Name = "UltraBoost",
                            Price = 5500.0
                        });
                });

            modelBuilder.Entity("ShoeInventoryApp.Models.ShoeColorVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShoeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShoeId");

                    b.ToTable("ShoeColorVariations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            ShoeId = 1,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Color = "Black",
                            ShoeId = 1,
                            Stock = 8
                        },
                        new
                        {
                            Id = 3,
                            Color = "White",
                            ShoeId = 2,
                            Stock = 5
                        },
                        new
                        {
                            Id = 4,
                            Color = "Black",
                            ShoeId = 2,
                            Stock = 7
                        });
                });

            modelBuilder.Entity("ShoeInventoryApp.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactInfo = "09123456789",
                            Name = "Shoe Supplier Inc."
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "09987654321",
                            Name = "Footwear Traders"
                        });
                });

            modelBuilder.Entity("ShoeInventoryApp.Models.PurchaseOrder", b =>
                {
                    b.HasOne("ShoeInventoryApp.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ShoeInventoryApp.Models.ShoeColorVariation", b =>
                {
                    b.HasOne("ShoeInventoryApp.Models.Shoe", "Shoe")
                        .WithMany("ColorVariations")
                        .HasForeignKey("ShoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shoe");
                });

            modelBuilder.Entity("ShoeInventoryApp.Models.Shoe", b =>
                {
                    b.Navigation("ColorVariations");
                });

            modelBuilder.Entity("ShoeInventoryApp.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
